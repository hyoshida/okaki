#editor
  = form_for [@user, @entry] do |f|
    - if @entry.errors.any?
      .modal.fade id="myModal" tabindex="-1"
        .modal-dialog
          .modal-content
            .modal-header
              button.close type="button" class="close" data-dismiss="modal"
                span
                  | &times;
              strong.text-danger.modal-title
                | エラーが発生しました
            .modal-body
              = error_messages_for @entry
      coffee:
        $('#myModal').modal('show')

    #js-eye-catch-image-modal.modal.fade tabindex="-1"
      .modal-dialog
        .modal-content
          .modal-header
            button.close type="button" class="close" data-dismiss="modal"
              span
                | &times;
            strong.modal-title
              | 記事画像
          .modal-body
            .form-group
              = f.file_field :image

            - if f.object.image?
              p.thumbnail
                = image_tag f.object.image_url
                - if f.object.persisted?
                  label.remove
                    span>
                      = f.check_box :remove_image
                    span>
                      | 削除する

    .editor-header
      .form-group
        = f.text_field :title, placeholder: f.object.class.human_attribute_name(:title)
        #eye-catch-image class="#{'field_with_errors' if f.object.errors[:image].any?}"
          = link_to '記事画像...', '#', class: 'btn btn-default',  data: { toggle: 'modal', target: '#js-eye-catch-image-modal' }
      .form-group
        .row
          .col-sm-6
            = f.grouped_collection_select :category_id, Category.roots, :children, :name, :id, :name, include_blank: "<#{f.object.class.human_attribute_name(:category_id)}>"
          .col-sm-6
            = f.text_field :tag_list, value: @entry.tag_list.to_s, placeholder: 'カンマ区切りでタグを指定する（例: ruby, vim, unix）', data: { role: :tagsinput }
      .form-group
        = f.text_area :headline, placeholder: f.object.class.human_attribute_name(:headline), rows: 3

    .editor-body
      .editor-body-left
        #wmd-button-bar-body
        = f.text_area :body, class: 'wmd-input form-control', id: 'wmd-input-body', placeholder: f.object.class.human_attribute_name(:body)
      .editor-body-right
        #wmd-preview-body.wmd-preview

    .editor-footer
      ul.list-inline
        li.pull-right
          .btn-group.dropup
            = f.submit '投稿する'

            / NOTE: なぜか高さがおかしくなる。とりあえずstyle指定で回避
            button.btn.btn-primary.dropdown-toggle type="button" data-toggle="dropdown" style="height: #{20 + (6 * 2) + (1 * 2)}px"
              span.caret
              span.sr-only
                | Toggle Dropdown

            ul#js-draft.dropdown-menu.dropdown-menu-right
              li
                = f.check_box :draft, checked: false, class: 'hidden'
                = link_to '下書き保存', '#'

        li
          = link_to 'Cancel', @entry.persisted? ? [@user, @entry] : user_entries_path(@user), class: 'btn btn-default', id: 'js-cancel'
        - if @entry.persisted?
          li
            = link_to 'Destroy', [@user, @entry], method: :delete, class: 'btn btn-danger', data: { confirm: '本当に削除しますか？' }

#uploadImageDialog.modal.fade tabindex="-1"
  .modal-dialog
    .modal-content
      = form_for Asset.new, html: { multipart: true } do |f|
        .modal-header
          button.close type="button" class="close" data-dismiss="modal"
            span
              | &times;
          strong.modal-title
            | 画像のアップロード
        .modal-body
          = f.file_field :file, id: 'js-upload-field', data: { url: assets_path }
        .modal-footer
          button.btn.btn-default type="button" data-dismiss="modal"
            | 閉じる
